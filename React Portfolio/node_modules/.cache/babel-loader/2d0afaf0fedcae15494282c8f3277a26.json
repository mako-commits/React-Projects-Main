{"ast":null,"code":"var _jsxFileName = \"/home/mako/Github/My Repo/React_Projects/Stripe Submenu/src/context.js\";\nimport React, { useState, useContext } from 'react';\nimport sublinks from './data'; // global context\n\nconst AppContext = React.createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(true);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openSubmenu = () => {\n    setIsSubmenuOpen(true);\n  };\n\n  const closeSubmenu = () => {\n    setIsSubmenuOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.AppProvider, {\n    value: {\n      isSubmenuOpen,\n      isSidebarOpen,\n      openSubmenu,\n      openSidebar,\n      closeSubmenu,\n      closeSidebar\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};","map":{"version":3,"sources":["/home/mako/Github/My Repo/React_Projects/Stripe Submenu/src/context.js"],"names":["React","useState","useContext","sublinks","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isSubmenuOpen","setIsSubmenuOpen","openSidebar","closeSidebar","openSubmenu","closeSubmenu","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,QAArB,C,CAGA;;AACA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAN,EAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;;AAGA,QAAMW,WAAW,GAAG,MAAM;AACtBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG,MAAM;AACvBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,QAAMK,WAAW,GAAG,MAAM;AACtBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG,MAAM;AACvBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,sBACI,oBAAC,UAAD,CAAY,WAAZ;AAAwB,IAAA,KAAK,EAAE;AAC3BD,MAAAA,aAD2B;AAE3BF,MAAAA,aAF2B;AAG3BM,MAAAA,WAH2B;AAI3BF,MAAAA,WAJ2B;AAK3BG,MAAAA,YAL2B;AAM3BF,MAAAA;AAN2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKN,QARL,CADJ;AAYH,CA7BM;AA+BP,OAAO,MAAMS,gBAAgB,GAAG,MAAM;AAClC,SAAOd,UAAU,CAACE,UAAD,CAAjB;AACH,CAFM","sourcesContent":["import React, { useState, useContext } from 'react'\nimport sublinks from './data'\n\n\n// global context\nconst AppContext = React.createContext()\n\nexport const AppProvider = ({ children }) => {\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true)\n    const [isSubmenuOpen, setIsSubmenuOpen] = useState(true)\n\n\n    const openSidebar = () => {\n        setIsSidebarOpen(true)\n    }\n    const closeSidebar = () => {\n        setIsSidebarOpen(false)\n    }\n    const openSubmenu = () => {\n        setIsSubmenuOpen(true)\n    }\n    const closeSubmenu = () => {\n        setIsSubmenuOpen(false)\n    }\n    return (\n        <AppContext.AppProvider value={{\n            isSubmenuOpen,\n            isSidebarOpen,\n            openSubmenu,\n            openSidebar,\n            closeSubmenu,\n            closeSidebar\n        }}>\n            {children}\n        </AppContext.AppProvider>\n    )\n}\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext)\n}"]},"metadata":{},"sourceType":"module"}