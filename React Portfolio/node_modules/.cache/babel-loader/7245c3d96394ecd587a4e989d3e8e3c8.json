{"ast":null,"code":"var _jsxFileName = \"/home/mako/Github/My Repo/React_Projects/Stripe Submenu/src/Submenu.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGlobalContext } from './context';\n\nconst Submenu = () => {\n  const {\n    isSubmenuOpen,\n    location\n  } = useGlobalContext();\n  const container = useRef(null);\n  useEffect(() => {\n    const submenu = container.current;\n    const {\n      bottom\n    } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`;\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: `${isSubmenuOpen ? 'submenu show' : 'submenu'}`,\n    ref: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, \"sub\");\n};\n\nexport default Submenu;","map":{"version":3,"sources":["/home/mako/Github/My Repo/React_Projects/Stripe Submenu/src/Submenu.js"],"names":["React","useState","useRef","useEffect","useGlobalContext","Submenu","isSubmenuOpen","location","container","submenu","current","bottom","style","left","center","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,WAAjC;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA8BH,gBAAgB,EAApD;AACA,QAAMI,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,OAAO,GAAGD,SAAS,CAACE,OAA1B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaJ,QAAnB;AACAE,IAAAA,OAAO,CAACG,KAAR,CAAcC,IAAd,GAAsB,GAAEC,MAAO,IAA/B;AACAL,IAAAA,OAAO,CAACG,KAAR,CAAcG,GAAd,GAAqB,GAAEJ,MAAO,IAA9B;AACD,GALQ,EAKN,CAACJ,QAAD,CALM,CAAT;AAMA,sBACE;AAAO,IAAA,SAAS,EAAG,GAAED,aAAa,GAAG,cAAH,GAAoB,SAAU,EAAhE;AAAmE,IAAA,GAAG,EAAEE,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAdD;;AAgBA,eAAeH,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { useGlobalContext } from './context'\nconst Submenu = () => {\n  const { isSubmenuOpen, location } = useGlobalContext()\n  const container = useRef(null)\n  useEffect(() => {\n    const submenu = container.current;\n    const { bottom } = location;\n    submenu.style.left = `${center}px`\n    submenu.style.top = `${bottom}px`\n  }, [location])\n  return (\n    <aside className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`} ref={container}>\n      sub\n    </aside>\n  )\n}\n\nexport default Submenu\n"]},"metadata":{},"sourceType":"module"}