{"ast":null,"code":"var _jsxFileName = \"/home/mako/Github/My Repo/React_Projects/Stripe Submenu/src/Submenu.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGlobalContext } from './context';\n\nconst Submenu = () => {\n  const {\n    isSubmenuOpen,\n    location,\n    page: {\n      page,\n      links\n    }\n  } = useGlobalContext();\n  const container = useRef(null);\n  const [columns, setColumns] = useState('col-2');\n  useEffect(() => {\n    const submenu = container.current;\n    const {\n      center,\n      bottom\n    } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`;\n    console.log(links);\n\n    if (links.length === 3) {\n      setColumns('col-3');\n    }\n\n    if (links.length > 3) {\n      setColumns('col-4');\n    }\n  }, [page, links, location]);\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: `${isSubmenuOpen ? 'submenu show' : 'submenu'}`,\n    ref: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, page), /*#__PURE__*/React.createElement(\"div\", {\n    className: `submenu-center ${columns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, links.map((link, index) => {\n    const {\n      label,\n      icon,\n      url\n    } = link;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: index,\n      href: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, icon, label);\n  })));\n};\n\nexport default Submenu; // const Submenu = () => {\n//   const {\n//     isSubmenuOpen,\n//     page: { page, links },\n//     location,\n//   } = useGlobalContext()\n//   const container = useRef(null)\n//   const [columns, setColumns] = useState('col-2')\n//   useEffect(() => {\n//     setColumns('col-2')\n//     const submenu = container.current\n//     const { center, bottom } = location\n//     submenu.style.left = `${center}px`\n//     submenu.style.top = `${bottom}px`\n//     console.log(links)\n//     if (links.length === 3) {\n//       setColumns('col-3')\n//     }\n//     if (links.length > 3) {\n//       setColumns('col-4')\n//     }\n//   }, [location, page, links])\n// return (\n//   <aside\n//     className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`}\n//     ref={container}\n//   >\n//     <section>\n//       <h4>{page}</h4>\n//       <div className={`submenu-center ${columns}`}>\n//         {links.map((link, index) => {\n//           const { url, icon, label } = link\n//           return (\n//             <a key={index} href={url}>\n//               {icon}\n//               {label}\n//             </a>\n//           )\n//         })}\n//       </div>\n//     </section>\n//   </aside >\n// )\n// }\n// export default Submenu","map":{"version":3,"sources":["/home/mako/Github/My Repo/React_Projects/Stripe Submenu/src/Submenu.js"],"names":["React","useState","useRef","useEffect","useGlobalContext","Submenu","isSubmenuOpen","location","page","links","container","columns","setColumns","submenu","current","center","bottom","style","left","top","console","log","length","map","link","index","label","icon","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,IAAI,EAAE;AAAEA,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAjC,MAAuDL,gBAAgB,EAA7E;AACA,QAAMM,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,OAAD,CAAtC;AACAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAGH,SAAS,CAACI,OAA1B;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqBT,QAA3B;AACAM,IAAAA,OAAO,CAACI,KAAR,CAAcC,IAAd,GAAsB,GAAEH,MAAO,IAA/B;AACAF,IAAAA,OAAO,CAACI,KAAR,CAAcE,GAAd,GAAqB,GAAEH,MAAO,IAA9B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;;AACA,QAAIA,KAAK,CAACa,MAAN,KAAiB,CAArB,EAAwB;AACtBV,MAAAA,UAAU,CAAC,OAAD,CAAV;AACD;;AACD,QAAIH,KAAK,CAACa,MAAN,GAAe,CAAnB,EAAsB;AACpBV,MAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AACF,GAZQ,EAYN,CAACJ,IAAD,EAAOC,KAAP,EAAcF,QAAd,CAZM,CAAT;AAaA,sBACE;AAAO,IAAA,SAAS,EAAG,GAAED,aAAa,GAAG,cAAH,GAAoB,SAAU,EAAhE;AACE,IAAA,GAAG,EAAEI,SADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAL,CAFF,eAGE;AAAK,IAAA,SAAS,EAAG,kBAAiBG,OAAQ,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAuBJ,IAA7B;AACA,wBACE;AAAG,MAAA,GAAG,EAAEC,KAAR;AAAe,MAAA,IAAI,EAAEG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,EAEGD,KAFH,CADF;AAMD,GARA,CADH,CAHF,CADF;AAiBD,CAlCD;;AAoCA,eAAerB,OAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { useGlobalContext } from './context'\n\nconst Submenu = () => {\n  const { isSubmenuOpen, location, page: { page, links, }, } = useGlobalContext()\n  const container = useRef(null)\n  const [columns, setColumns] = useState('col-2')\n  useEffect(() => {\n    const submenu = container.current\n    const { center, bottom } = location\n    submenu.style.left = `${center}px`\n    submenu.style.top = `${bottom}px`\n    console.log(links)\n    if (links.length === 3) {\n      setColumns('col-3')\n    }\n    if (links.length > 3) {\n      setColumns('col-4')\n    }\n  }, [page, links, location])\n  return (\n    <aside className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`}\n      ref={container}>\n      <h4>{page}</h4>\n      <div className={`submenu-center ${columns}`}>\n        {links.map((link, index) => {\n          const { label, icon, url } = link\n          return (\n            <a key={index} href={url}>\n              {icon}\n              {label}\n            </a>\n          )\n        })}\n      </div>\n    </aside>\n  )\n}\n\nexport default Submenu\n\n\n// const Submenu = () => {\n//   const {\n//     isSubmenuOpen,\n//     page: { page, links },\n//     location,\n//   } = useGlobalContext()\n//   const container = useRef(null)\n//   const [columns, setColumns] = useState('col-2')\n//   useEffect(() => {\n//     setColumns('col-2')\n//     const submenu = container.current\n//     const { center, bottom } = location\n//     submenu.style.left = `${center}px`\n//     submenu.style.top = `${bottom}px`\n//     console.log(links)\n//     if (links.length === 3) {\n//       setColumns('col-3')\n//     }\n//     if (links.length > 3) {\n//       setColumns('col-4')\n//     }\n//   }, [location, page, links])\n// return (\n//   <aside\n//     className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`}\n//     ref={container}\n//   >\n//     <section>\n//       <h4>{page}</h4>\n//       <div className={`submenu-center ${columns}`}>\n//         {links.map((link, index) => {\n//           const { url, icon, label } = link\n//           return (\n//             <a key={index} href={url}>\n//               {icon}\n//               {label}\n//             </a>\n//           )\n//         })}\n//       </div>\n//     </section>\n//   </aside >\n// )\n// }\n\n// export default Submenu\n"]},"metadata":{},"sourceType":"module"}