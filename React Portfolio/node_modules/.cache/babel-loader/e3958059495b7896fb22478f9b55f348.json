{"ast":null,"code":"var _jsxFileName = \"/home/mako/Github/My Repo/React_Projects/Stripe Submenu/src/Submenu.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGlobalContext } from './context'; // const Submenu = () => {\n//   const { isSubmenuOpen, location, } = useGlobalContext()\n//   const container = useRef(null)\n//   useEffect(() => {\n//     const submenu = container.current\n//     const { center, bottom } = location\n//     submenu.style.left = `${center}px`\n//     submenu.style.top = `${bottom}px`\n//   }, [location])\n//   return (\n//     <aside className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`} ref={container}>\n//       sub\n//     </aside>\n//   )\n// }\n// export default Submenu\n\nconst Submenu = () => {\n  const {\n    isSubmenuOpen,\n    // page: { page, links },\n    location\n  } = useGlobalContext();\n  const container = useRef(null);\n  const [columns, setColumns] = useState('col-2');\n  useEffect(() => {\n    setColumns('col-2');\n    const submenu = container.current;\n    const {\n      center,\n      bottom\n    } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`; // console.log(links)\n    // if (links.length === 3) {\n    //   setColumns('col-3')\n    // }\n    // if (links.length > 3) {\n    //   setColumns('col-4')\n    // }\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: `${isSubmenuOpen ? 'submenu show' : 'submenu'}`,\n    ref: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Submenu;","map":{"version":3,"sources":["/home/mako/Github/My Repo/React_Projects/Stripe Submenu/src/Submenu.js"],"names":["React","useState","useRef","useEffect","useGlobalContext","Submenu","isSubmenuOpen","location","container","columns","setColumns","submenu","current","center","bottom","style","left","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,WAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AACJC,IAAAA,aADI;AAEJ;AACAC,IAAAA;AAHI,MAIFH,gBAAgB,EAJpB;AAKA,QAAMI,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,OAAD,CAAtC;AACAE,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,OAAD,CAAV;AACA,UAAMC,OAAO,GAAGH,SAAS,CAACI,OAA1B;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqBP,QAA3B;AACAI,IAAAA,OAAO,CAACI,KAAR,CAAcC,IAAd,GAAsB,GAAEH,MAAO,IAA/B;AACAF,IAAAA,OAAO,CAACI,KAAR,CAAcE,GAAd,GAAqB,GAAEH,MAAO,IAA9B,CALc,CAMd;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAbQ,EAaN,CAACP,QAAD,CAbM,CAAT;AAcA,sBACE;AACE,IAAA,SAAS,EAAG,GAAED,aAAa,GAAG,cAAH,GAAoB,SAAU,EAD3D;AAEE,IAAA,GAAG,EAAEE,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAqBD,CA3CD;;AA6CA,eAAeH,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { useGlobalContext } from './context'\n\n// const Submenu = () => {\n//   const { isSubmenuOpen, location, } = useGlobalContext()\n//   const container = useRef(null)\n//   useEffect(() => {\n//     const submenu = container.current\n//     const { center, bottom } = location\n//     submenu.style.left = `${center}px`\n//     submenu.style.top = `${bottom}px`\n//   }, [location])\n//   return (\n//     <aside className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`} ref={container}>\n//       sub\n//     </aside>\n//   )\n// }\n\n// export default Submenu\n\n\nconst Submenu = () => {\n  const {\n    isSubmenuOpen,\n    // page: { page, links },\n    location,\n  } = useGlobalContext()\n  const container = useRef(null)\n  const [columns, setColumns] = useState('col-2')\n  useEffect(() => {\n    setColumns('col-2')\n    const submenu = container.current\n    const { center, bottom } = location\n    submenu.style.left = `${center}px`\n    submenu.style.top = `${bottom}px`\n    // console.log(links)\n    // if (links.length === 3) {\n    //   setColumns('col-3')\n    // }\n    // if (links.length > 3) {\n    //   setColumns('col-4')\n    // }\n  }, [location])\n  return (\n    <aside\n      className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`}\n      ref={container}\n    >\n      <section>\n        {/* <h4>{page}</h4>\n        <div className={`submenu-center ${columns}`}>\n          {links.map((link, index) => {\n            const { url, icon, label } = link\n            return (\n              <a key={index} href={url}>\n                {icon}\n                {label}\n              </a>\n            )\n          })}\n        </div> */}\n      </section>\n    </aside >\n  )\n}\n\nexport default Submenu\n"]},"metadata":{},"sourceType":"module"}