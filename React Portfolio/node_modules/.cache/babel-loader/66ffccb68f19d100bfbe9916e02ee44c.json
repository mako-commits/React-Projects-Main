{"ast":null,"code":"var _jsxFileName = \"/home/mako/Github/My Repo/React_Projects/Lorem Ipsum Generator/src/App.js\";\nimport React, { useState, Fragment } from 'react';\nimport data from './data';\n\nfunction App() {\n  //for how many paragraphs to be generated\n  const [count, setCount] = useState(0); //default value for the text,which is an empty array\n\n  const [text, setText] = useState([]);\n\n  const handleSubmit = e => {\n    // to prevent uneccesary page refresh\n    e.preventDefault();\n    let amount = parseInt(count);\n    setText(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Random Text Generator\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"lorem-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"paragraphs:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    id: \"amount\",\n    value: count,\n    onChange: e => setCount(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Generate\")), /*#__PURE__*/React.createElement(\"article\", {\n    className: \"lorem-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, text.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, item);\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mako/Github/My Repo/React_Projects/Lorem Ipsum Generator/src/App.js"],"names":["React","useState","Fragment","data","App","count","setCount","text","setText","handleSubmit","e","preventDefault","amount","parseInt","target","value","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,SAASC,GAAT,GAAe;AAEb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC,CAHa,CAIb;;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACAA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAACR,KAAD,CAArB;AACAG,IAAAA,OAAO,CAACL,IAAD,CAAP;AACD,GALD;;AAMA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEM,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAME;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAC,QAHL;AAIE,IAAA,KAAK,EAAEJ,KAJT;AAKE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAYE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CAFF,eAiBE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,CAACS,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,wBACE;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBD,IAAhB,CADF;AAGD,GAJA,CADH,CAjBF,CADF,CADF;AA6BD;;AAED,eAAeb,GAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport data from './data';\nfunction App() {\n\n  //for how many paragraphs to be generated\n  const [count, setCount] = useState(0)\n  //default value for the text,which is an empty array\n  const [text, setText] = useState([])\n\n\n  const handleSubmit = (e) => {\n    // to prevent uneccesary page refresh\n    e.preventDefault();\n    let amount = parseInt(count)\n    setText(data)\n  }\n  return (\n    <Fragment>\n      <section className='section-center'>\n        <h3>Random Text Generator</h3>\n        <form className='lorem-form' onSubmit={handleSubmit}>\n          <label htmlFor='amount'>\n            paragraphs:\n          </label>\n\n          {/* value = count(state value).....as the value changes,the count changes */}\n          <input\n            type='number'\n            name='amount'\n            id='amount'\n            value={count}\n            onChange={(e) => setCount(e.target.value)} />\n          <button type='submit' className='btn'>Generate</button>\n        </form>\n\n        <article className='lorem-text'>\n          {text.map((item, index) => {\n            return (\n              <p key={index}>{item}</p>\n            )\n          })}\n        </article>\n      </section>\n    </Fragment>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}