{"ast":null,"code":"var _jsxFileName = \"/home/mako/Github/My Repo/React-Projects-Main/P/src/context.js\";\nimport React, { useState, useContext } from 'react';\nimport sublinks from './data';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\n  const [page, setPage] = useState({\n    page: '',\n    links: []\n  });\n  const [location, setLocation] = useState({});\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openSubmenu = (text, coordinates) => {\n    const page = sublinks.find(link => link.page === text);\n    setPage(page);\n    setLocation(coordinates);\n    setIsSubmenuOpen(true);\n  };\n\n  const closeSubmenu = () => {\n    setIsSubmenuOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isSidebarOpen,\n      openSidebar,\n      closeSidebar,\n      isSubmenuOpen,\n      openSubmenu,\n      closeSubmenu,\n      page,\n      location\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/home/mako/Github/My Repo/React-Projects-Main/P/src/context.js"],"names":["React","useState","useContext","sublinks","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isSubmenuOpen","setIsSubmenuOpen","page","setPage","links","location","setLocation","openSidebar","closeSidebar","openSubmenu","text","coordinates","find","link","closeSubmenu","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAE,EAAR;AAAYE,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMgB,WAAW,GAAG,MAAM;AACtBR,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMS,YAAY,GAAG,MAAM;AACvBT,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,QAAMU,WAAW,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB;AACvC,UAAMT,IAAI,GAAGT,QAAQ,CAACmB,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACX,IAAL,KAAcQ,IAAtC,CAAb;AACAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAI,IAAAA,WAAW,CAACK,WAAD,CAAX;AACAV,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GALD;;AAMA,QAAMa,YAAY,GAAG,MAAM;AACvBb,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAIA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AACHH,MAAAA,aADG;AAEHS,MAAAA,WAFG;AAGHC,MAAAA,YAHG;AAIHR,MAAAA,aAJG;AAKHS,MAAAA,WALG;AAMHK,MAAAA,YANG;AAOHZ,MAAAA,IAPG;AAQHG,MAAAA;AARG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYKR,QAZL,CADJ;AAgBH,CArCD,C,CAsCA;;;AACA,OAAO,MAAMkB,gBAAgB,GAAG,MAAM;AAClC,SAAOvB,UAAU,CAACE,UAAD,CAAjB;AACH,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext } from 'react'\nimport sublinks from './data'\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n    const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\n    const [page, setPage] = useState({ page: '', links: [] });\n    const [location, setLocation] = useState({});\n    const openSidebar = () => {\n        setIsSidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setIsSidebarOpen(false);\n    };\n    const openSubmenu = (text, coordinates) => {\n        const page = sublinks.find((link) => link.page === text);\n        setPage(page);\n        setLocation(coordinates);\n        setIsSubmenuOpen(true);\n    };\n    const closeSubmenu = () => {\n        setIsSubmenuOpen(false);\n    };\n\n    return (\n        <AppContext.Provider\n            value={{\n                isSidebarOpen,\n                openSidebar,\n                closeSidebar,\n                isSubmenuOpen,\n                openSubmenu,\n                closeSubmenu,\n                page,\n                location,\n            }}\n        >\n            {children}\n        </AppContext.Provider>\n    );\n};\n// make sure use\nexport const useGlobalContext = () => {\n    return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n"]},"metadata":{},"sourceType":"module"}