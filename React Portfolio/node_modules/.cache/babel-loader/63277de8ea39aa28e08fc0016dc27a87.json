{"ast":null,"code":"var _jsxFileName = \"/home/mako/Github/My Repo/React_Projects/Grocery Bud/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nfunction App() {\n  // state value for form name\n  const [name, setName] = useState(''); // state value list for local storage\n\n  const [list, setList] = useState(''); // state value for whether editing or not\n\n  const [isEditing, setIsEditing] = useState('false'); // reflect wich item we are actually ediiting\n\n  const [editID, setEditID] = useState(null); // \n\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: ''\n  }); // functions\n\n  const handleSubmit = e => {\n    e.preventDefault(); // checking if the value is empty,if yes,display alert\n\n    if (!name) {//display alert\n    } // checking if there is something in the value and if isEditing is true\n    else if (name && isEditing) {// deal with edit\n      } else {\n        // show alert\n        const newItem = {\n          id: new Date().getTime().toString(),\n          title: name\n        };\n        setList([...list, newItem]);\n        setName('');\n      }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"grocery bud \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"e.g eggs\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, isEditing ? 'edit' : 'submit'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"clear items\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mako/Github/My Repo/React_Projects/Grocery Bud/src/App.js"],"names":["React","useState","useEffect","List","Alert","App","name","setName","list","setList","isEditing","setIsEditing","editID","setEditID","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","newItem","id","Date","getTime","toString","title","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFa,CAGb;;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAJa,CAKb;;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,OAAD,CAA1C,CANa,CAOb;;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC,CARa,CASb;;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,GAAG,EAAE,EAApB;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAAD,CAAlC,CAVa,CAab;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;;AACA,QAAI,CAACf,IAAL,EAAW,CACT;AACD,KAFD,CAGA;AAHA,SAIK,IAAIA,IAAI,IAAII,SAAZ,EAAuB,CAC1B;AACD,OAFI,MAGA;AACH;AACA,cAAMY,OAAO,GAAG;AAAEC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAN;AAAuCC,UAAAA,KAAK,EAAErB;AAA9C,SAAhB;AACAG,QAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUc,OAAV,CAAD,CAAP;AACAf,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAhBD;;AAiBA,sBACE,uDACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEY,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACE,IAAN,iBAAc,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,SAFZ;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAEV,IAJT;AAKE,IAAA,QAAQ,EAAGc,CAAD,IAAOb,OAAO,CAACa,CAAC,CAACQ,MAAF,CAASC,KAAV,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,SAAS,GAAG,MAAH,GAAY,QADxB,CARF,CAHF,CAFF,eAkBE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CAlBF,CADF,CADF;AA2BD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nfunction App() {\n  // state value for form name\n  const [name, setName] = useState('');\n  // state value list for local storage\n  const [list, setList] = useState('');\n  // state value for whether editing or not\n  const [isEditing, setIsEditing] = useState('false')\n  // reflect wich item we are actually ediiting\n  const [editID, setEditID] = useState(null)\n  // \n  const [alert, setAlert] = useState({ show: false, msg: '', type: '' })\n\n\n  // functions\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // checking if the value is empty,if yes,display alert\n    if (!name) {\n      //display alert\n    }\n    // checking if there is something in the value and if isEditing is true\n    else if (name && isEditing) {\n      // deal with edit\n    }\n    else {\n      // show alert\n      const newItem = { id: new Date().getTime().toString(), title: name };\n      setList([...list, newItem])\n      setName('')\n    }\n  }\n  return (\n    <>\n      <section className='section-center'>\n\n        <form className='grocery-form' onSubmit={handleSubmit}>\n          {alert.show && <Alert />}\n          <h3>grocery bud </h3>\n          <div className='form-control'>\n            <input\n              type='text'\n              className='grocery'\n              placeholder='e.g eggs'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <button type='submit' className='submit-btn'>\n              {isEditing ? 'edit' : 'submit'}\n            </button>\n          </div>\n        </form>\n        <div className='grocery-container'>\n          <List items={list} />\n          <button className='clear-btn'>clear items</button>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}