{"ast":null,"code":"var _jsxFileName = \"/home/mako/Github/My Repo/React_Projects/Grocery Bud/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nfunction App() {\n  // // state value for form name\n  // const [name, setName] = useState('');\n  // // state value list for local storage\n  // const [list, setList] = useState('');\n  // // state value for whether editing or not\n  // const [isEditing, setIsEditing] = useState('false');\n  // // reflect wich item we are actually ediiting\n  // const [editID, setEditID] = useState(null);\n  // // \n  // const [alert, setAlert] = useState({ show: false, msg: '', type: '' })\n  // // functions\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   // checking if the value is empty,if yes,display alert\n  //   if (!name) {\n  //     //display alert\n  //   }\n  //   // checking if there is something in the value and if isEditing is true\n  //   else if (name && isEditing) {\n  //     // deal with edit\n  //   }\n  //   else {\n  //     // show alert\n  //     const newItem = { id: new Date().getTime().toString(), title: name };\n  //     setList([...list, newItem]);\n  //     setName('');\n  //   }\n  // }\n  const [name, setName] = useState('');\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      showAlert(true, 'danger', 'please enter value');\n    } else if (name && isEditing) {\n      setList(list.map(item => {\n        if (item.id === editID) {\n          return { ...item,\n            title: name\n          };\n        }\n\n        return item;\n      }));\n      setName('');\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, 'success', 'value changed');\n    } else {\n      showAlert(true, 'success', 'item added to the list');\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = (show = false, type = '', msg = '') => {\n    setAlert({\n      show,\n      type,\n      msg\n    });\n  };\n\n  const clearList = () => {\n    showAlert(true, 'danger', 'empty list');\n    setList([]);\n  };\n\n  const removeItem = id => {\n    showAlert(true, 'danger', 'item removed');\n    setList(list.filter(item => item.id !== id));\n  };\n\n  const editItem = id => {\n    const specificItem = list.find(item => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(specificItem.title);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"grocery bud \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"e.g eggs\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, isEditing ? 'edit' : 'submit'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"clear items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mako/Github/My Repo/React_Projects/Grocery Bud/src/App.js"],"names":["React","useState","useEffect","List","Alert","App","name","setName","list","setList","getLocalStorage","isEditing","setIsEditing","editID","setEditID","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","showAlert","map","item","id","title","newItem","Date","getTime","toString","clearList","removeItem","filter","editItem","specificItem","find","localStorage","setItem","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nfunction App() {\n  // // state value for form name\n  // const [name, setName] = useState('');\n  // // state value list for local storage\n  // const [list, setList] = useState('');\n  // // state value for whether editing or not\n  // const [isEditing, setIsEditing] = useState('false');\n  // // reflect wich item we are actually ediiting\n  // const [editID, setEditID] = useState(null);\n  // // \n  // const [alert, setAlert] = useState({ show: false, msg: '', type: '' })\n\n\n  // // functions\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   // checking if the value is empty,if yes,display alert\n  //   if (!name) {\n  //     //display alert\n  //   }\n  //   // checking if there is something in the value and if isEditing is true\n  //   else if (name && isEditing) {\n  //     // deal with edit\n\n  //   }\n  //   else {\n  //     // show alert\n  //     const newItem = { id: new Date().getTime().toString(), title: name };\n  //     setList([...list, newItem]);\n  //     setName('');\n  //   }\n  // }\n  const [name, setName] = useState('');\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({ show: false, msg: '', type: '' });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      showAlert(true, 'danger', 'please enter value');\n    } else if (name && isEditing) {\n      setList(\n        list.map((item) => {\n          if (item.id === editID) {\n            return { ...item, title: name };\n          }\n          return item;\n        })\n      );\n      setName('');\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, 'success', 'value changed');\n    } else {\n      showAlert(true, 'success', 'item added to the list');\n      const newItem = { id: new Date().getTime().toString(), title: name };\n\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = (show = false, type = '', msg = '') => {\n    setAlert({ show, type, msg });\n  };\n  const clearList = () => {\n    showAlert(true, 'danger', 'empty list');\n    setList([]);\n  };\n  const removeItem = (id) => {\n    showAlert(true, 'danger', 'item removed');\n    setList(list.filter((item) => item.id !== id));\n  };\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(specificItem.title);\n  };\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n  return (\n\n    <section className='section-center'>\n\n      <form className='grocery-form' onSubmit={handleSubmit}>\n        {alert.show && <Alert />}\n        <h3>grocery bud </h3>\n        <div className='form-control'>\n          <input\n            type='text'\n            className='grocery'\n            placeholder='e.g eggs'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button type='submit' className='submit-btn'>\n            {isEditing ? 'edit' : 'submit'}\n          </button>\n        </div>\n      </form>\n      <div className='grocery-container'>\n        <List items={list} />\n        <button className='clear-btn'>clear items</button>\n      </div>\n    </section>\n\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}